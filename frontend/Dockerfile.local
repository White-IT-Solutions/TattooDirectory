# Frontend Docker configuration for local development
FROM node:20-alpine

# Set working directory
WORKDIR /app

# Install dependencies for better Docker layer caching
COPY package*.json ./
RUN npm ci

# Copy source code (will be overridden by volume mounts for hot reloading)
COPY . .

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# Copy entrypoint script for debugging support (before switching user)
COPY docker-entrypoint-debug.sh /docker-entrypoint-debug.sh
RUN chmod +x /docker-entrypoint-debug.sh

# Create .next directory and set permissions for hot reloading
RUN mkdir -p .next && chown -R nextjs:nodejs .next
RUN mkdir -p node_modules/.cache && chown -R nextjs:nodejs node_modules/.cache

# Change ownership of the app directory
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expose ports
EXPOSE 3000
EXPOSE 9230

# Set environment to development
ENV NODE_ENV=development
ENV NEXT_TELEMETRY_DISABLED=1

# Enable hot reloading for Docker
ENV WATCHPACK_POLLING=true
ENV CHOKIDAR_USEPOLLING=true

# Copy Docker-specific Next.js config
COPY next.config.docker.mjs ./next.config.mjs

# Start development server with optional debugging
ENTRYPOINT ["/docker-entrypoint-debug.sh"]
CMD ["npm", "run", "dev:docker"]