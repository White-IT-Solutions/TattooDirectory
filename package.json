{
  "name": "tattoo-directory-mvp",
  "version": "1.0.0",
  "description": "Tattoo Artist Directory MVP - Local Development Environment",
  "private": true,
  "scripts": {
    "local:start": "node scripts/platform-launcher.js start",
    "local:stop": "node scripts/platform-launcher.js stop",
    "local:restart": "npm run local:stop && npm run local:start",
    "local:start:windows": "scripts\\start-local.bat",
    "local:start:unix": "bash scripts/start-local.sh",
    "local:stop:windows": "scripts\\stop-local.bat",
    "local:stop:unix": "bash scripts/stop-local.sh",
    "local:logs": "docker-compose -f dev-tools/docker/docker-compose.local.yml logs -f",
    "local:logs:backend": "docker-compose -f dev-tools/docker/docker-compose.local.yml logs -f backend",
    "local:logs:frontend": "docker-compose -f dev-tools/docker/docker-compose.local.yml logs -f frontend",
    "local:logs:localstack": "docker-compose -f dev-tools/docker/docker-compose.local.yml logs -f localstack",
    "local:logs:swagger": "docker-compose -f dev-tools/docker/docker-compose.local.yml logs -f swagger-ui",
    "local:logs:viewer": "node scripts/log-viewer.js",
    "local:health": "node scripts/health-check.js",
    "local:clean": "node scripts/platform-launcher.js clean",
    "local:reset": "npm run local:clean && npm run local:start",
    "local:status": "docker-compose -f dev-tools/docker/docker-compose.local.yml ps",
    "local:utils": "node scripts/dev-utils.js",
    "local:test-api": "node scripts/dev-utils.js test",
    "local:cleanup": "node scripts/dev-utils.js cleanup",
    "local:report": "node scripts/dev-utils.js report",
    "local:platform-info": "node scripts/platform-launcher.js info",
    "local:docker-info": "node scripts/platform-launcher.js docker-info",
    "local:monitor": "node scripts/resource-monitor.js full",
    "local:monitor:live": "node scripts/resource-monitor.js monitor",
    "local:resources": "node scripts/resource-monitor.js recommendations",
    "seed": "cd scripts && npm run seed",
    "seed:clean": "cd scripts && npm run seed:clean",
    "seed:validate": "cd scripts && npm run seed:validate",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "docker-compose -f dev-tools/docker/docker-compose.local.yml up backend",
    "test:integration": "npm test --workspace=@tattoo-directory/integration-tests",
    "test:integration:api": "npm run test:api --workspace=@tattoo-directory/integration-tests",
    "test:integration:data": "npm run test:data --workspace=@tattoo-directory/integration-tests",
    "test:integration:setup": "npm run test:setup --workspace=@tattoo-directory/integration-tests",
    "test:integration:cleanup": "npm run test:cleanup --workspace=@tattoo-directory/integration-tests",
    "test:integration:coverage": "npm run test:coverage --workspace=@tattoo-directory/integration-tests",
    "test:e2e": "npm test --workspace=tattoo-directory-e2e-tests",
    "test:e2e:setup": "npm run setup --workspace=tattoo-directory-e2e-tests",
    "test:e2e:workflows": "npm run test:workflows --workspace=tattoo-directory-e2e-tests",
    "test:e2e:integration": "cd tests/e2e && node run-tests.js tests/integration/**/*.test.js",
    "test:e2e:visual": "cd tests/e2e && node run-tests.js tests/visual/**/*.test.js",
    "test:e2e:headless": "cd tests/e2e && HEADLESS=false npm test",
    "test:e2e:debug": "cd tests/e2e && DEBUG=true HEADLESS=false npm test",
    "test:e2e:clean": "cd tests/e2e && npm run clean",
    "debug:start": "ENABLE_BACKEND_DEBUG=true ENABLE_FRONTEND_DEBUG=true npm run local:start",
    "debug:backend": "ENABLE_BACKEND_DEBUG=true npm run local:start",
    "debug:frontend": "ENABLE_FRONTEND_DEBUG=true npm run local:start",
    "logs:start": "node scripts/log-aggregator.js",
    "logs:view": "node scripts/log-viewer.js --follow",
    "logs:backend": "node scripts/log-viewer.js --follow backend",
    "logs:frontend": "node scripts/log-viewer.js --follow frontend",
    "logs:errors": "node scripts/log-viewer.js --level ERROR --follow",
    "monitor:localstack": "node scripts/localstack-monitor.js watch",
    "monitor:health": "node scripts/localstack-monitor.js health",
    "monitor:report": "node scripts/localstack-monitor.js report",
    "monitor:reset": "node scripts/localstack-monitor.js reset",
    "performance:monitor": "node scripts/performance-monitor.js",
    "performance:monitor:continuous": "node scripts/performance-monitor.js --continuous",
    "performance:monitor:startup": "node scripts/performance-monitor.js --startup",
    "performance:resources": "node scripts/resource-usage-monitor.js --continuous",
    "performance:resources:once": "node scripts/resource-usage-monitor.js --once",
    "performance:benchmark": "node scripts/performance-benchmarks.js --full",
    "performance:benchmark:quick": "node scripts/performance-benchmarks.js --quick",
    "optimize:startup": "node scripts/startup-optimizer.js --optimize",
    "optimize:startup:benchmark": "node scripts/startup-optimizer.js --benchmark",
    "optimize:cache": "node scripts/docker-cache-optimizer.js --optimize",
    "optimize:cache:analyze": "node scripts/docker-cache-optimizer.js --analyze",
    "performance:dashboard": "node scripts/performance-dashboard.js",
    "performance:export": "node scripts/performance-dashboard.js --export",
    "performance:demo": "node scripts/performance-demo.js",
    "performance:test": "node scripts/test-performance-monitoring.js",
    "monitor:comprehensive": "node scripts/start-monitoring.js start",
    "monitor:validate": "node scripts/start-monitoring.js validate",
    "monitor:status": "node scripts/start-monitoring.js status",
    "monitor:config": "node scripts/start-monitoring.js config show",
    "monitor:config:reset": "node scripts/start-monitoring.js config reset",
    "monitor:dashboard": "node scripts/comprehensive-monitoring-dashboard.js",
    "monitor:health-advanced": "node scripts/health-monitor.js check",
    "monitor:health-continuous": "node scripts/health-monitor.js monitor",
    "monitor:environment": "node scripts/environment-health-validator.js validate",
    "monitor:environment-continuous": "node scripts/environment-health-validator.js monitor",
    "alerts:test": "node scripts/alert-system.js",
    "test:monitoring": "node scripts/test-monitoring-system.js"
  },
  "devDependencies": {
    "axios": "^1.6.0"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "workspaces": [
    "frontend",
    "scripts",
    "tests/integration",
    "tests/e2e"
  ]
}
