{
  "timestamp": "2025-09-29T16:16:56.481Z",
  "success": true,
  "errors": [],
  "warnings": [],
  "phases": {
    "discovery": {
      "name": "discovery",
      "success": true,
      "results": {
        "filesFound": 294,
        "structure": {
          "currentFiles": [
            {
              "path": "docs\\README-Docs.md",
              "status": "active",
              "lastModified": "2025-09-29T16:04:31.930Z",
              "contentType": "setup",
              "dependencies": [
                "workflows/testing-strategies.md",
                "setup/dependencies.md",
                "setup/docker-setup.md",
                "architecture/system-overview.md",
                "architecture/api-design.md",
                "architecture/data-models.md",
                "architecture/infrastructure/infrastructure.md",
                "architecture/diagrams/",
                "setup/local-development.md",
                "setup/localstack-setup.md",
                "components/frontend/",
                "components/backend/",
                "components/scripts/",
                "testing/",
                "deployment/terraform.md",
                "workflows/deployment-process.md",
                "deployment/ci-cd.md",
                "workflows/monitoring.md",
                "reference/api_reference.md",
                "docs/reference/command-reference.md",
                "workflows/data-management.md",
                "workflows/monitoring.md",
                "docs/README-Docs.md",
                "docs/troubleshooting/",
                "docs/troubleshooting/TROUBLESHOOTING_GUIDE.md",
                "TABLE_OF_CONTENTS.md",
                "GAP_ANALYSIS_REPORT.md"
              ]
            },
            {
              "path": "docs\\QUICK_START.md",
              "status": "active",
              "lastModified": "2025-09-29T15:12:26.530Z",
              "contentType": "setup",
              "dependencies": [
                "setup/local-development.md",
                "setup/frontend-only.md",
                "setup/docker-setup.md",
                "setup/dependencies.md",
                "workflows/testing-strategies.md",
                "workflows/testing-strategies.md",
                "workflows/testing-strategies.md",
                "workflows/testing-strategies.md",
                "docs/workflows/DEVELOPMENT_GUIDE.md",
                "reference/api_reference.md",
                "troubleshooting/TROUBLESHOOTING_GUIDE.md",
                "docs/setup/local-development.md",
                ".setup/frontend-only.md",
                "docs/setup/docker-setup.md",
                "docs/setup/dependencies.md",
                ".components/frontend/",
                ".components/backend/",
                ".components/infrastructure/",
                ".components/scripts/",
                "docs/workflows/data-management.md",
                "docs/workflows/testing-strategies.md",
                "docs/workflows/deployment-process.md",
                "docs/workflows/monitoring.md",
                "docs/reference/command-reference.md",
                ".reference/configuration.md",
                ".reference/environment-variables.md",
                ".reference/npm-scripts.md",
                ".docs/docs/architecture/system-overview.md",
                ".docs/docs/architecture/data-models.md",
                ".docs/docs/architecture/api-design.md"
              ]
            },
            {
              "path": "docs\\workflows\\vertex_ai_readme.md",
              "status": "active",
              "lastModified": "2025-09-29T11:01:47.228Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\workflows\\testing-strategies.md",
              "status": "active",
              "lastModified": "2025-09-29T14:38:12.819Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": "docs\\workflows\\monitoring.md",
              "status": "active",
              "lastModified": "2025-09-29T16:04:31.928Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\workflows\\DEVELOPMENT_GUIDE.md",
              "status": "active",
              "lastModified": "2025-09-29T16:04:31.932Z",
              "contentType": "setup",
              "dependencies": [
                "../reference/command-reference.md",
                "../QUICK_START.md",
                "./DEVELOPMENT_GUIDE.md",
                "../QUICK_START.md",
                "../components/",
                "./testing-strategies.md",
                "./deployment-process.md",
                "../QUICK_START.md",
                "./DEVELOPMENT_GUIDE.md",
                "docs/reference/api_reference.md",
                "../troubleshooting/TROUBLESHOOTING_GUIDE.md",
                "docs/setup/local-development.md",
                ".setup/frontend-only.md",
                "docs/setup/docker-setup.md",
                "docs/setup/dependencies.md",
                ".components/frontend/",
                ".components/backend/",
                ".components/infrastructure/",
                ".components/scripts/",
                "docs/workflows/data-management.md",
                "./testing-strategies.md",
                "./deployment-process.md",
                "docs/workflows/monitoring.md",
                "../reference/command-reference.md",
                ".reference/configuration.md",
                ".reference/environment-variables.md",
                ".reference/npm-scripts.md",
                "../architecture/system-overview.md",
                "../architecture/data-models.md",
                "../architecture/api-design.md",
                "../troubleshooting/TROUBLESHOOTING_GUIDE.md",
                "../setup/local-development.md"
              ]
            },
            {
              "path": "docs\\workflows\\deployment-process.md",
              "status": "active",
              "lastModified": "2025-09-28T19:40:25.993Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\workflows\\data-management.md",
              "status": "active",
              "lastModified": "2025-09-29T15:12:26.605Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\testing\\README_studio_test_data.md",
              "status": "active",
              "lastModified": "2025-09-28T19:40:25.989Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\testing\\PRODUCTION-PARITY-VALIDATION.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:07.930Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\testing\\data-seeder.md",
              "status": "active",
              "lastModified": "2025-09-29T14:38:12.824Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\testing\\CONSOLIDATED_TEST_DOCUMENTATION.md",
              "status": "active",
              "lastModified": "2025-09-29T14:38:12.826Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\testing\\component_testing.md",
              "status": "active",
              "lastModified": "2025-09-29T16:04:31.939Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\testing\\API_TESTING_GUIDE.md",
              "status": "active",
              "lastModified": "2025-09-29T15:12:26.625Z",
              "contentType": "setup",
              "dependencies": [
                "docs/workflows/testing-strategies.md",
                "docs/workflows/testing-strategies.md"
              ]
            },
            {
              "path": "docs\\setup\\SETUP_MASTER.md",
              "status": "active",
              "lastModified": "2025-09-29T14:38:12.829Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\setup\\localstack-setup.md",
              "status": "active",
              "lastModified": "2025-09-28T19:40:25.985Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\setup\\local-development.md",
              "status": "active",
              "lastModified": "2025-09-29T16:04:31.942Z",
              "contentType": "setup",
              "dependencies": [
                "../getting-started/SETUP_MASTER.md",
                "docs/setup/docker-setup.md",
                "docs/setup/dependencies.md",
                "../troubleshooting/TROUBLESHOOTING_GUIDE.md",
                "../workflows/DEVELOPMENT_GUIDE.md"
              ]
            },
            {
              "path": "docs\\setup\\frontend-only.md",
              "status": "active",
              "lastModified": "2025-09-29T15:04:35.854Z",
              "contentType": "setup",
              "dependencies": [
                "./local-development.md",
                "../components/frontend/README.md",
                "../troubleshooting/TROUBLESHOOTING_GUIDE.md",
                "../workflows/DEVELOPMENT_GUIDE.md"
              ]
            },
            {
              "path": "docs\\setup\\docker-setup.md",
              "status": "active",
              "lastModified": "2025-09-29T14:15:11.982Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\setup\\dependencies.md",
              "status": "active",
              "lastModified": "2025-09-28T19:40:25.908Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\troubleshooting\\TROUBLESHOOTING_MASTER.md",
              "status": "active",
              "lastModified": "2025-09-29T14:55:47.133Z",
              "contentType": "setup",
              "dependencies": [
                "PLATFORM_SETUP.md",
                "CROSS_PLATFORM_SUMMARY.md",
                "DEBUGGING_GUIDE.md"
              ]
            },
            {
              "path": "docs\\troubleshooting\\TROUBLESHOOTING_GUIDE.md",
              "status": "active",
              "lastModified": "2025-09-29T14:55:47.136Z",
              "contentType": "api",
              "dependencies": [
                "localstack/TROUBLESHOOTING_MASTER.md"
              ]
            },
            {
              "path": "docs\\troubleshooting\\README.md",
              "status": "active",
              "lastModified": "2025-09-28T19:40:26.001Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\reference\\studio-data-reference.md",
              "status": "active",
              "lastModified": "2025-09-29T12:56:01.748Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\reference\\npm-scripts.md",
              "status": "active",
              "lastModified": "2025-09-29T14:55:47.190Z",
              "contentType": "setup",
              "dependencies": [
                "./commands.md"
              ]
            },
            {
              "path": "docs\\reference\\environment-variables.md",
              "status": "active",
              "lastModified": "2025-09-28T21:18:54.963Z",
              "contentType": "setup",
              "dependencies": [
                "./configuration.md"
              ]
            },
            {
              "path": "docs\\reference\\configuration.md",
              "status": "active",
              "lastModified": "2025-09-29T16:04:31.946Z",
              "contentType": "setup",
              "dependencies": [
                "../setup/local-development.md"
              ]
            },
            {
              "path": "docs\\reference\\component-api-reference.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:07.254Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\reference\\command-reference.md",
              "status": "active",
              "lastModified": "2025-09-29T16:16:42.078Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\reference\\api_reference.md",
              "status": "active",
              "lastModified": "2025-09-28T21:34:18.858Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\deployment\\terraform.md",
              "status": "active",
              "lastModified": "2025-09-29T14:15:11.994Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\deployment\\ci-cd.md",
              "status": "active",
              "lastModified": "2025-09-29T14:15:11.994Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\consolidated\\GAP_ANALYSIS_REPORT.md",
              "status": "active",
              "lastModified": "2025-09-29T16:05:11.826Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": "docs\\components\\scripts\\README.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:07.679Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\components\\infrastructure\\README.md",
              "status": "active",
              "lastModified": "2025-09-29T14:15:11.995Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\components\\frontend\\README_Components.md",
              "status": "moved",
              "lastModified": "2025-09-29T12:30:18.839Z",
              "contentType": "setup",
              "dependencies": [
                "../../README.md",
                "../../__tests__/README.md",
                "../../../../docs/performance.md",
                "../../../../docs/images.md"
              ]
            },
            {
              "path": "docs\\components\\frontend\\README.md",
              "status": "active",
              "lastModified": "2025-09-28T19:40:25.986Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\components\\frontend\\component-integration-guide.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:07.380Z",
              "contentType": "setup",
              "dependencies": [
                "./design-system-guide.md",
                "./component-api-reference.md",
                "./testing-guidelines.md",
                "./performance-guide.md",
                "./accessibility-guide.md"
              ]
            },
            {
              "path": "docs\\components\\backend\\README.md",
              "status": "active",
              "lastModified": "2025-09-28T19:40:25.988Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\system_design\\WASR Doc Tattoo Artist Directory MVP.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.574Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\system_design\\SRS Doc Tattoo Artist Directory MVP.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:13.588Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\system_design\\PSD Doc Tattoo Artist Directory MVP.md",
              "status": "moved",
              "lastModified": "2025-09-28T17:34:13.335Z",
              "contentType": "setup",
              "dependencies": [
                "</docs/diagrams/High Level Overview.png> \"High Level Overview\"",
                "</docs/diagrams/Feature Dependency Map.png> \"Feature Dependency Map\""
              ]
            },
            {
              "path": "docs\\architecture\\system_design\\PRD Doc Tattoo Artist Directory MVP.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.570Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\system_design\\Page Descriptions HL Doc Tattoo Artist Directory MVP.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.572Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\system_design\\OR Doc Tattoo Artist Directory MVP.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.570Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\system_design\\LLD Doc Tattoo Artist Directory MVP.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:13.050Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\system_design\\HLD Doc Tattoo Artist Directory MVP.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:12.965Z",
              "contentType": "setup",
              "dependencies": [
                "</docs/diagrams/AWS Amplify Architecture.png> \"AWS Amplify Architecture\"",
                "</docs/diagrams/High Level Overview.png> \"High Level Overview\"",
                "</docs/diagrams/C4 Model Level 1 - System Context.png> \"System Context\"",
                "</docs/diagrams/C4 Model Level 2 - Containers.png> \"Containers\"",
                "</docs/diagrams/C4 Model Level 3 - Components.png> \"Components\"",
                "</docs/diagrams/User Interaction Sequence Diagram (Search",
                "</docs/diagrams/Data Aggregation Sequence Diagram.png> \"Sequence Diagram\"",
                "</docs/diagrams/CICD Pipeline Diagram.png> \"CI/CD Pipeline Diagram\"",
                "</docs/diagrams/Network Architecture Diagram (VPC",
                "</docs/diagrams/Data Model Diagram (DynamoDB Single-Table Design",
                "</docs/diagrams/State Machine Diagram (AWS Step Functions",
                "</docs/diagrams/Observability & Alerting Flow Diagram.png> \"Observability & Alerting Flow Diagram\"",
                "</docs/diagrams/Network Architecture Diagram (VPC",
                "</docs/diagrams/AWS Configured Access.png> \"AWS Configured Access\"",
                "</docs/diagrams/Image Ingestion and Display.png> \"Image Ingestion and Display\""
              ]
            },
            {
              "path": "docs\\architecture\\system_design\\Future Operating Model Tattoo Artist Directory MVP.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.567Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\system_design\\DPP Doc Tattoo Artist Directory MVP.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.566Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\system_design\\aws-config-compliance.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.575Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\infrastructure.md",
              "status": "active",
              "lastModified": "2025-09-28T19:40:25.913Z",
              "contentType": "setup",
              "dependencies": [
                "./01-foundation.md",
                "./03-audit-foundation.md",
                "./04-central-logging.md",
                "./05-networking.md",
                "./06-central-security.md",
                "./07-app-security.md",
                "./08-log-storage.md",
                "./09-app-storage.md",
                "./10-search.md",
                "./11-iam.md",
                "./12-compute.md",
                "./13-api.md",
                "./14-security-monitoring.md",
                "./15-app-monitoring.md",
                "./16-backup.md",
                "./17-governance.md",
                "./19-delivery.md",
                "../README.md"
              ]
            },
            {
              "path": "docs\\architecture\\infrastructure\\19-delivery.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:12.221Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\17-governance.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:12.133Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\16-backup.md",
              "status": "duplicate",
              "lastModified": "2025-09-28T17:34:12.041Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\15-app-monitoring.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:11.953Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\14-security-monitoring.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:11.866Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\13-api.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:11.777Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\12-compute.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:11.684Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\11-iam.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:11.583Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\10-search.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:11.497Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\09-app-storage.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:11.415Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\08-log-storage.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:11.324Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\07-app-security.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:11.234Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\06-central-security.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:11.140Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\05-networking.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:11.051Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\04-central-logging.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:10.959Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\03-audit-foundation.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:10.877Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\infrastructure\\01-foundation.md",
              "status": "active",
              "lastModified": "2025-09-28T17:34:10.800Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\components\\backend\\handlers\\README_SECRETS_ROTATION.md",
              "status": "active",
              "lastModified": "2025-09-28T17:33:57.949Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\components\\backend\\handlers\\README_ROTATE_NAT_GATEWAY_EIP.md",
              "status": "active",
              "lastModified": "2025-09-28T17:33:57.814Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\components\\backend\\handlers\\README_QUEUE_SCRAPING.md",
              "status": "active",
              "lastModified": "2025-09-28T17:33:57.688Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\components\\backend\\handlers\\README_FIND_ARTISTS.md",
              "status": "active",
              "lastModified": "2025-09-28T17:33:57.559Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\components\\backend\\handlers\\README_FARGATE_SCRAPER.md",
              "status": "active",
              "lastModified": "2025-09-28T17:33:56.889Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\components\\backend\\handlers\\README_DYNAMODB_SYNC.md",
              "status": "active",
              "lastModified": "2025-09-28T17:33:57.426Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\components\\backend\\handlers\\README_DISCOVER_STUDIOS.md",
              "status": "active",
              "lastModified": "2025-09-28T17:33:57.239Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\components\\backend\\handlers\\README_API_HANDLER.md",
              "status": "active",
              "lastModified": "2025-09-28T17:33:57.046Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\User Interaction Sequence Diagram (Search).md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.505Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\State Machine Diagram (AWS Step Functions).md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.505Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\Observability & Alerting Flow Diagram.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.504Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\Network Architecture Diagram (VPC).md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.503Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\Multi-Account Architecture.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.503Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\Logging Architecture.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.502Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\Image Ingestion and Display.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.501Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\High Level Overview.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.500Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\Feature Dependency Map.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.500Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\Data Model Diagram (DynamoDB Single-Table Design).md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.499Z",
              "contentType": "reference",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\Data Governance & Takedown Process Diagram.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.499Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\Data Aggregation Sequence Diagram.md",
              "status": "moved",
              "lastModified": "2025-09-28T16:33:31.498Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\CICD Pipeline Diagram.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.498Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\C4 Model Level 3 - Components.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.497Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\C4 Model Level 2 - Containers.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.497Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\C4 Model Level 1 - System Context.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.496Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\Backup and Disaster Recovery.md",
              "status": "duplicate",
              "lastModified": "2025-09-28T16:33:31.495Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\AWS Configured Access.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.494Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": "docs\\architecture\\diagrams\\source\\AWS Amplify Architecture.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.494Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\TEST_FIXES_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.741Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\TEST_FAILURES_ANALYSIS.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.739Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\TEMPLATE_IMPLEMENTATION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-27T22:42:52.788Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\STUDIO_DATA_MIGRATION_GUIDE.md",
              "status": "active",
              "lastModified": "2025-09-28T17:58:41.136Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\SCRIPTS_DIRECTORY_ANALYSIS.md",
              "status": "moved",
              "lastModified": "2025-09-26T13:56:58.773Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\PERFORMANCE_BENCHMARKS.md",
              "status": "active",
              "lastModified": "2025-09-28T17:58:09.402Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\MIGRATION_GUIDE.md",
              "status": "active",
              "lastModified": "2025-09-28T17:57:47.286Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\MIGRATION_COMPLETION_REPORT.md",
              "status": "moved",
              "lastModified": "2025-09-28T17:59:22.026Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\LEGACY_COMMAND_MIGRATION_GUIDE.md",
              "status": "active",
              "lastModified": "2025-09-28T13:12:20.552Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\Lambda_Doc.md",
              "status": "active",
              "lastModified": "2025-09-28T16:33:31.554Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\Highlight_README.md",
              "status": "active",
              "lastModified": "2025-08-11T15:51:59.010Z",
              "contentType": "workflow",
              "dependencies": []
            },
            {
              "path": ".kiro\\FRONTEND_SYNC_MIGRATION_GUIDE.md",
              "status": "active",
              "lastModified": "2025-09-28T17:56:27.699Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\FRONTEND_SYNC_CONSOLIDATION.md",
              "status": "moved",
              "lastModified": "2025-09-28T17:34:02.370Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\FINAL_SYSTEM_VALIDATION_REPORT.md",
              "status": "active",
              "lastModified": "2025-09-28T17:55:05.585Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\COMMAND_COMPARISON.md",
              "status": "active",
              "lastModified": "2025-09-28T17:51:56.733Z",
              "contentType": "setup",
              "dependencies": [
                "MIGRATION_GUIDE.md",
                "TROUBLESHOOTING.md"
              ]
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_9_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.394Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_8_9_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.393Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_22_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.310Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_21_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.161Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_20_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.197Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_19_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.967Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_18_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.392Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_17_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.391Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_16_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.390Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_15_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.389Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_14_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.388Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_13_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.387Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_12_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.386Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_11_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.385Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\TASK_10_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.383Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\SEARCH_RESULTS_IMPLEMENTATION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.370Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\SEARCH_PERFORMANCE_ACCESSIBILITY_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.369Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\NAVIGATION_ENHANCEMENTS_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.338Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\IMPLEMENTATION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.518Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\DEMO_TEST_PAGES_ANALYSIS.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.309Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\DELETED_PAGES_BACKUP_LOG.md",
              "status": "duplicate",
              "lastModified": "2025-09-26T13:56:57.307Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\COMPONENT_INTEGRATION_VERIFICATION.md",
              "status": "moved",
              "lastModified": "2025-09-26T13:56:57.306Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\ui_ux_review\\ADVANCED_SEARCH_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:57.323Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\steering\\tech.md",
              "status": "active",
              "lastModified": "2025-09-16T10:36:48.084Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\steering\\structure.md",
              "status": "active",
              "lastModified": "2025-09-16T13:52:03.149Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\steering\\product.md",
              "status": "active",
              "lastModified": "2025-09-16T10:29:04.908Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\steering\\development-environment.md",
              "status": "active",
              "lastModified": "2025-09-18T14:52:24.560Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\refactoring_reviews\\Summary of Refactoring Needs.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.948Z",
              "contentType": "setup",
              "dependencies": [
                "01-foundation-refactoring-summary.md",
                "02-networking-refactoring-summary.md",
                "03-security-refactoring-summary.md",
                "04-storage-refactoring-summary.md",
                "06-iam-refactoring-summary.md",
                "08-api-refactoring-summary.md",
                "09-monitoring-refactoring-summary.md"
              ]
            },
            {
              "path": ".kiro\\refactoring_reviews\\multi-account-configuration-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.950Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\refactoring_reviews\\09-monitoring-refactoring-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.946Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\refactoring_reviews\\08-api-refactoring-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.944Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\refactoring_reviews\\06-iam-refactoring-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.943Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\refactoring_reviews\\04-storage-refactoring-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.942Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\refactoring_reviews\\03-security-refactoring-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.940Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\refactoring_reviews\\02-networking-refactoring-summary.md",
              "status": "moved",
              "lastModified": "2025-09-26T13:56:56.937Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\refactoring_reviews\\01-foundation-refactoring-summary.md",
              "status": "moved",
              "lastModified": "2025-09-26T13:56:56.936Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\9 - Implement integration testing framework.md",
              "status": "active",
              "lastModified": "2025-09-16T10:56:30.461Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\8 - Configure cross-platform compatibility and resource management.md",
              "status": "active",
              "lastModified": "2025-09-16T10:56:38.845Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\7 - Implement development workflow scripts and tooling.md",
              "status": "active",
              "lastModified": "2025-09-16T10:56:48.079Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\6 - Set up Swagger UI for API documentation and testing.md",
              "status": "active",
              "lastModified": "2025-09-16T10:57:04.961Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\6 - README_ErrorHandling.md",
              "status": "active",
              "lastModified": "2025-09-08T17:08:17.080Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\5 - Create test data seeding system.md",
              "status": "active",
              "lastModified": "2025-09-16T10:57:19.048Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\4 - Implement Docker Compose orchestration with service dependencies.md",
              "status": "active",
              "lastModified": "2025-09-16T10:57:29.037Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\3 - Create frontend Docker configuration for development server.md",
              "status": "active",
              "lastModified": "2025-09-16T10:57:45.282Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\20 - Final integration testing and documentation.md",
              "status": "active",
              "lastModified": "2025-09-16T10:55:01.535Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\2 - Create backend Docker configuration for Lambda Runtime Interface Emulator.md",
              "status": "active",
              "lastModified": "2025-09-16T10:57:52.215Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\19 - Create production parity validation.md",
              "status": "active",
              "lastModified": "2025-09-16T10:54:53.536Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\18 - Set up advanced development features.md",
              "status": "active",
              "lastModified": "2025-09-16T10:54:33.797Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\18 - README_ADVANCED_FEATURES.md",
              "status": "active",
              "lastModified": "2025-09-16T10:15:04.032Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\17 - IMPLEMENTATION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-08T17:25:01.466Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\17 - Implement security and isolation measures.md",
              "status": "active",
              "lastModified": "2025-09-16T10:54:16.494Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\16 - Create data management and reset utilities.md",
              "status": "active",
              "lastModified": "2025-09-16T10:53:21.874Z",
              "contentType": "workflow",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\14 - Implement environment validation and health monitoring.md",
              "status": "active",
              "lastModified": "2025-09-16T10:52:47.275Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\13 - Create comprehensive documentation and setup guides.md",
              "status": "active",
              "lastModified": "2025-09-16T10:55:35.517Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\12 - Implement performance monitoring and optimization.md",
              "status": "active",
              "lastModified": "2025-09-16T10:52:11.270Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\11 - Set up debugging and development tools integration.md",
              "status": "active",
              "lastModified": "2025-09-16T10:56:01.028Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\10 - Create end-to-end testing with Puppeteer.md",
              "status": "active",
              "lastModified": "2025-09-16T10:56:13.856Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\localstack\\1 - Set up LocalStack configuration and initialization scripts.md",
              "status": "moved",
              "lastModified": "2025-09-16T10:58:00.821Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\improved_mock_data\\Task 9 - Test incremental processing.md",
              "status": "active",
              "lastModified": "2025-09-19T12:31:15.763Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\improved_mock_data\\Task 8 - Test all npm run commands.md",
              "status": "active",
              "lastModified": "2025-09-19T12:28:35.187Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\improved_mock_data\\Task 7 - Validate backward compatibility.md",
              "status": "active",
              "lastModified": "2025-09-19T12:25:55.020Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\improved_mock_data\\Task 6 - Pipeline integration tests.md",
              "status": "active",
              "lastModified": "2025-09-19T12:23:47.443Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\improved_mock_data\\Task 5 - Integrate with unified data pipeline.md",
              "status": "active",
              "lastModified": "2025-09-19T12:21:45.667Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\improved_mock_data\\Task 4 - Implement data export.md",
              "status": "active",
              "lastModified": "2025-09-19T12:19:50.148Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\improved_mock_data\\Task 3 - Add contact & studio data generation.md",
              "status": "active",
              "lastModified": "2025-09-19T12:18:03.726Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\improved_mock_data\\Task 2 - Fix critical data structure mismatches.md",
              "status": "active",
              "lastModified": "2025-09-19T13:19:37.878Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\improved_mock_data\\Task 14 - Update pipeline documentation.md",
              "status": "active",
              "lastModified": "2025-09-19T12:40:34.885Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\improved_mock_data\\Task 13 - Performance regression tests.md",
              "status": "active",
              "lastModified": "2025-09-19T12:39:42.338Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\improved_mock_data\\Task 12 - Test Docker compatibility.md",
              "status": "active",
              "lastModified": "2025-09-19T12:38:44.798Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\improved_mock_data\\Task 11 - Error handling and recovery tests.md",
              "status": "active",
              "lastModified": "2025-09-19T12:38:14.964Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\improved_mock_data\\Task 10 - Test cross-service data synchronization.md",
              "status": "active",
              "lastModified": "2025-09-19T12:34:29.752Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\improved_mock_data\\Task 1 - Integrate advanced mock data generation capabilities.md",
              "status": "outdated",
              "lastModified": "2025-09-19T12:09:47.661Z",
              "contentType": "reference",
              "dependencies": []
            },
            {
              "path": ".kiro\\planning\\TERRAFORM_WORKFLOW_UPDATES.md",
              "status": "active",
              "lastModified": "2025-09-08T16:55:36.206Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\planning\\Terraform Checklist - Revised.md",
              "status": "active",
              "lastModified": "2025-08-01T09:47:47.492Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\planning\\System_Design_vs_Implementation_Analysis.md",
              "status": "active",
              "lastModified": "2025-09-01T10:48:01.034Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\planning\\SPEC_ALIGNMENT_ANALYSIS.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.963Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\planning\\SINGLE_DEVELOPER_EXECUTION_PLAN.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.961Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\planning\\LOCALSTACK_INFRASTRUCTURE_GAP_ANALYSIS.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.959Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\planning\\Data_Structure_Comparison_Report.md",
              "status": "active",
              "lastModified": "2025-09-18T23:36:01.691Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\planning\\CURRENT_API_DOCUMENTATION.md",
              "status": "active",
              "lastModified": "2025-09-08T15:30:24.948Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\planning\\CONSOLIDATED_EXECUTION_PLAN.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.956Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\planning\\backend_status.md",
              "status": "active",
              "lastModified": "2025-09-01T11:27:57.187Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\diagram_reports\\VALIDATION_REPORT.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.932Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\diagram_reports\\FINAL_VALIDATION_REPORT.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.931Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\diagram_reports\\CHANGES.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.928Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\diagram_reports\\AUDIT_REPORT.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:56.927Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\TASK_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-18T20:59:43.793Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\Task 9 - Implement comprehensive testing suite.md",
              "status": "active",
              "lastModified": "2025-09-18T21:33:53.014Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\Task 8 - Integrate with existing npm workspace structure.md",
              "status": "active",
              "lastModified": "2025-09-18T21:34:50.231Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\Task 7 - Create CLI Interface.md",
              "status": "active",
              "lastModified": "2025-09-18T21:35:57.577Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\Task 6 - Build UnifiedDataManager orchestration class.md",
              "status": "active",
              "lastModified": "2025-09-18T21:37:27.405Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\Task 5 - Create health monitoring and validation system.md",
              "status": "active",
              "lastModified": "2025-09-18T21:39:47.494Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\Task 4 - Build pipeline execution engine.md",
              "status": "active",
              "lastModified": "2025-09-18T21:40:36.173Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\Task 3 - Create core data processing components.md",
              "status": "active",
              "lastModified": "2025-09-18T21:41:54.032Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\Task 2 - Implement state management and change detection.md",
              "status": "active",
              "lastModified": "2025-09-18T21:42:29.026Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\Task 12 - Final Integration and Validation.md",
              "status": "active",
              "lastModified": "2025-09-18T21:30:25.707Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\Task 11 - Create comprehensive documentation.md",
              "status": "active",
              "lastModified": "2025-09-18T21:29:01.558Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\Task 10 - Create backward compatibility and migration support.md",
              "status": "active",
              "lastModified": "2025-09-18T21:31:14.064Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\Task 1 - Set up core infrastructure and configuration system.md",
              "status": "active",
              "lastModified": "2025-09-18T15:59:55.326Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\data_tooling.md",
              "status": "active",
              "lastModified": "2025-09-18T14:36:40.156Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\Data_Management_Simplification_Spec.md",
              "status": "active",
              "lastModified": "2025-09-18T14:45:51.734Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\data_tooling\\Data_Flow_Diagram.md",
              "status": "active",
              "lastModified": "2025-09-18T14:13:14.128Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_8.7_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-20T19:22:30.455Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_8.6_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-20T18:24:24.928Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_8.5_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-20T17:56:14.426Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_8.3_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-20T17:28:14.068Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_8.2_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-20T17:21:57.101Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_8.1_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-20T15:38:35.230Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_7.4_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-20T14:53:15.656Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_7.3_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-20T14:34:02.000Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_7.2_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-20T14:01:31.334Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_7.1_STUDIO_CARD_SIZING_COMPLETION.md",
              "status": "active",
              "lastModified": "2025-09-20T13:52:17.852Z",
              "contentType": "setup",
              "dependencies": [
                "./STUDIO_CARD_SIZING_FIX_SUMMARY.md"
              ]
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_7.1_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-20T12:40:16.079Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_6_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-20T12:21:02.943Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_5_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-20T12:00:04.814Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_4.4_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-20T11:24:09.776Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_4.3_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-19T21:25:53.232Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_4.2_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-19T21:32:38.771Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\TASK_4.1_COMPLETION_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-19T20:56:31.701Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\task-4-build-fix-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:58.217Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\task-3-completion-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:58.214Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\STYLE_GALLERY_IMPLEMENTATION.md",
              "status": "active",
              "lastModified": "2025-09-21T10:59:49.053Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\STUDIO_CARD_SIZING_FIX_SUMMARY.md",
              "status": "active",
              "lastModified": "2025-09-20T13:51:30.436Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\README_ALTERNATE8.md",
              "status": "active",
              "lastModified": "2025-09-27T19:56:41.222Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\README_ALTERNATE7.md",
              "status": "active",
              "lastModified": "2025-09-27T19:56:41.147Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\README_ALTERNATE6.md",
              "status": "active",
              "lastModified": "2025-09-27T19:56:40.986Z",
              "contentType": "setup",
              "dependencies": [
                "../../README.md",
                "../../__tests__/README.md",
                "../../../../docs/performance.md",
                "../../../../docs/images.md"
              ]
            },
            {
              "path": ".kiro\\frontend_improvement\\README_ALTERNATE5.md",
              "status": "active",
              "lastModified": "2025-09-27T19:56:40.903Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\README_ALTERNATE4.md",
              "status": "moved",
              "lastModified": "2025-09-27T19:56:40.821Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\README_ALTERNATE3.md",
              "status": "active",
              "lastModified": "2025-09-27T19:56:40.740Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\README_ALTERNATE2.md",
              "status": "active",
              "lastModified": "2025-09-27T19:56:40.660Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\README_ALTERNATE1.md",
              "status": "active",
              "lastModified": "2025-09-27T19:56:40.566Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\PRIVACY_POLICY_SCALING_FIX.md",
              "status": "active",
              "lastModified": "2025-09-20T17:33:34.918Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\MICRO_INTERACTIONS_ANIMATION_SYSTEM.md",
              "status": "active",
              "lastModified": "2025-09-21T11:23:34.870Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\ENHANCED_STYLE_FILTER_IMPLEMENTATION.md",
              "status": "active",
              "lastModified": "2025-09-21T10:33:15.392Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\frontend_improvement\\build-errors-fix-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:58.208Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\consolidated_data_tooling\\task-1-9-completion-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:59.022Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\consolidated_data_tooling\\task-1-13-implementation-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:59.020Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\consolidated_data_tooling\\task-1-12-implementation-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:59.019Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\consolidated_data_tooling\\task-1-12-docker-compatibility-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:59.018Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\consolidated_data_tooling\\task-1-11-implementation-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:59.016Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\consolidated_data_tooling\\task-1-11-error-handling-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:59.014Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\consolidated_data_tooling\\task-1-10-cross-service-sync-summary.md",
              "status": "active",
              "lastModified": "2025-09-26T13:56:59.012Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\update-architecture-diagrams ✅\\tasks.md",
              "status": "active",
              "lastModified": "2025-09-02T17:07:47.662Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\update-architecture-diagrams ✅\\requirements.md",
              "status": "active",
              "lastModified": "2025-09-02T14:31:51.105Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\update-architecture-diagrams ✅\\design.md",
              "status": "active",
              "lastModified": "2025-09-02T14:41:21.118Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\ui-ux-audit-dark-mode-compatibility ✅\\tasks.md",
              "status": "active",
              "lastModified": "2025-09-27T10:26:41.508Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\ui-ux-audit-dark-mode-compatibility ✅\\requirements.md",
              "status": "active",
              "lastModified": "2025-09-25T14:03:22.756Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\ui-ux-audit-dark-mode-compatibility ✅\\design.md",
              "status": "active",
              "lastModified": "2025-09-25T14:08:35.176Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\search-functionality-cohesiveness ✅\\tasks.md",
              "status": "active",
              "lastModified": "2025-09-23T19:42:50.141Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\search-functionality-cohesiveness ✅\\requirements.md",
              "status": "active",
              "lastModified": "2025-09-21T13:12:08.239Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\search-functionality-cohesiveness ✅\\design.md",
              "status": "active",
              "lastModified": "2025-09-21T13:17:43.853Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\terraform ✅\\VPC_ENDPOINTS_ADDITION.md",
              "status": "active",
              "lastModified": "2025-08-15T15:27:45.872Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\terraform ✅\\ARCHITECTURE_REDESIGN.md",
              "status": "active",
              "lastModified": "2025-08-15T13:06:47.283Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\terraform ✅\\ARCHITECTURE_IMPLEMENTATION_STATUS.md",
              "status": "active",
              "lastModified": "2025-08-15T15:27:25.745Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\studio-data-pipeline-integration  ✅\\tasks.md",
              "status": "active",
              "lastModified": "2025-09-23T19:45:33.814Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\studio-data-pipeline-integration  ✅\\requirements.md",
              "status": "active",
              "lastModified": "2025-09-20T19:42:08.934Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\studio-data-pipeline-integration  ✅\\design.md",
              "status": "active",
              "lastModified": "2025-09-21T09:26:04.302Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\react-to-nextjs-migration ✅\\tasks.md",
              "status": "active",
              "lastModified": "2025-07-22T10:25:06.210Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\react-to-nextjs-migration ✅\\requirements.md",
              "status": "active",
              "lastModified": "2025-07-21T12:48:02.796Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\react-to-nextjs-migration ✅\\design.md",
              "status": "active",
              "lastModified": "2025-07-21T12:51:39.751Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\local-testing-dockerization ✅\\tasks.md",
              "status": "active",
              "lastModified": "2025-09-15T16:04:10.074Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\local-testing-dockerization ✅\\requirements.md",
              "status": "active",
              "lastModified": "2025-09-10T13:33:23.820Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\local-testing-dockerization ✅\\design.md",
              "status": "active",
              "lastModified": "2025-09-10T13:36:22.510Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\enhanced-localstack-infrastructure ✅\\tasks.md",
              "status": "active",
              "lastModified": "2025-09-26T15:51:25.475Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\enhanced-localstack-infrastructure ✅\\requirements.md",
              "status": "active",
              "lastModified": "2025-09-26T12:59:51.300Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\enhanced-localstack-infrastructure ✅\\design.md",
              "status": "active",
              "lastModified": "2025-09-26T13:07:09.592Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\documentation-consolidation ✅\\tasks.md",
              "status": "active",
              "lastModified": "2025-09-28T12:14:38.828Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\documentation-consolidation ✅\\requirements.md",
              "status": "active",
              "lastModified": "2025-09-27T18:20:03.398Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\documentation-consolidation ✅\\design.md",
              "status": "active",
              "lastModified": "2025-09-27T18:28:02.150Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\frontend-design-system-enhancement 📈\\tasks.md",
              "status": "active",
              "lastModified": "2025-09-23T22:35:07.032Z",
              "contentType": "setup",
              "dependencies": [
                "../../../docs/AI_Assisted_Documentation/frontend_improvement/STUDIO_CARD_SIZING_FIX_SUMMARY.md"
              ]
            },
            {
              "path": ".kiro\\specs\\frontend-design-system-enhancement 📈\\requirements.md",
              "status": "active",
              "lastModified": "2025-09-19T18:18:53.637Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\frontend-design-system-enhancement 📈\\implementation-notes.md",
              "status": "active",
              "lastModified": "2025-09-19T18:17:14.689Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\frontend-design-system-enhancement 📈\\design.md",
              "status": "active",
              "lastModified": "2025-09-19T18:16:18.002Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\frontend-design-system-enhancement 📈\\data-alignment-requirements.md",
              "status": "active",
              "lastModified": "2025-09-18T23:30:53.471Z",
              "contentType": "component",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\data-management-simplification ✅\\tasks.md",
              "status": "active",
              "lastModified": "2025-09-18T20:59:56.847Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\data-management-simplification ✅\\requirements.md",
              "status": "active",
              "lastModified": "2025-09-18T14:58:04.939Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\data-management-simplification ✅\\design.md",
              "status": "active",
              "lastModified": "2025-09-18T15:01:53.608Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\backend-consolidation-terraform-alignment 📈\\tasks.md",
              "status": "active",
              "lastModified": "2025-09-16T10:15:04.004Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\backend-consolidation-terraform-alignment 📈\\requirements.md",
              "status": "active",
              "lastModified": "2025-09-08T15:16:17.542Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\backend-consolidation-terraform-alignment 📈\\design.md",
              "status": "active",
              "lastModified": "2025-09-08T15:21:40.041Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\component-integration-consolidation  ✅\\tasks.md",
              "status": "active",
              "lastModified": "2025-09-25T14:02:11.464Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\component-integration-consolidation  ✅\\requirements.md",
              "status": "active",
              "lastModified": "2025-09-24T10:55:49.471Z",
              "contentType": "api",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\component-integration-consolidation  ✅\\design.md",
              "status": "active",
              "lastModified": "2025-09-24T10:56:55.650Z",
              "contentType": "setup",
              "dependencies": []
            },
            {
              "path": ".kiro\\specs\\component-integration-consolidation  ✅\\component-inventory-analysis.md",
              "status": "active",
              "lastModified": "2025-09-24T11:24:22.704Z",
              "contentType": "component",
              "dependencies": []
            }
          ],
          "movedFiles": [
            {
              "originalPath": "docs\\components\\frontend\\README_Components.md",
              "newPath": "docs\\components\\frontend\\trash.',",
              "contentMigrated": false,
              "reason": "Unknown"
            },
            {
              "originalPath": "docs\\architecture\\system_design\\PSD Doc Tattoo Artist Directory MVP.md",
              "newPath": null,
              "contentMigrated": false,
              "reason": "Unknown"
            },
            {
              "originalPath": "docs\\architecture\\diagrams\\source\\Data Aggregation Sequence Diagram.md",
              "newPath": "docs\\architecture\\diagrams\\source\\DLQ",
              "contentMigrated": false,
              "reason": "Unknown"
            },
            {
              "originalPath": ".kiro\\SCRIPTS_DIRECTORY_ANALYSIS.md",
              "newPath": ".kiro\\backups\\archive",
              "contentMigrated": false,
              "reason": "Consolidation"
            },
            {
              "originalPath": ".kiro\\MIGRATION_COMPLETION_REPORT.md",
              "newPath": ".kiro\\`archive\\legacy-scripts\\`",
              "contentMigrated": false,
              "reason": "Unknown"
            },
            {
              "originalPath": ".kiro\\FRONTEND_SYNC_CONSOLIDATION.md",
              "newPath": ".kiro\\eliminate",
              "contentMigrated": false,
              "reason": "Consolidation"
            },
            {
              "originalPath": ".kiro\\ui_ux_review\\COMPONENT_INTEGRATION_VERIFICATION.md",
              "newPath": ".kiro\\ui_ux_review\\reduce",
              "contentMigrated": false,
              "reason": "Unknown"
            },
            {
              "originalPath": ".kiro\\refactoring_reviews\\02-networking-refactoring-summary.md",
              "newPath": ".kiro\\refactoring_reviews\\central-logging",
              "contentMigrated": false,
              "reason": "Unknown"
            },
            {
              "originalPath": ".kiro\\refactoring_reviews\\01-foundation-refactoring-summary.md",
              "newPath": ".kiro\\refactoring_reviews\\security-foundation",
              "contentMigrated": false,
              "reason": "Unknown"
            },
            {
              "originalPath": ".kiro\\localstack\\1 - Set up LocalStack configuration and initialization scripts.md",
              "newPath": ".kiro\\localstack\\appropriate",
              "contentMigrated": false,
              "reason": "Reorganization"
            },
            {
              "originalPath": ".kiro\\frontend_improvement\\README_ALTERNATE4.md",
              "newPath": ".kiro\\frontend_improvement\\trash.',",
              "contentMigrated": false,
              "reason": "Unknown"
            }
          ],
          "missingFiles": [
            "workflows/testing-strategies.md",
            "setup/dependencies.md",
            "setup/docker-setup.md",
            "architecture/system-overview.md",
            "architecture/api-design.md",
            "architecture/data-models.md",
            "architecture/infrastructure/infrastructure.md",
            "architecture/diagrams/",
            "setup/local-development.md",
            "setup/localstack-setup.md",
            "components/frontend/",
            "components/backend/",
            "components/scripts/",
            "testing/",
            "deployment/terraform.md",
            "workflows/deployment-process.md",
            "deployment/ci-cd.md",
            "workflows/monitoring.md",
            "reference/api_reference.md",
            "workflows/data-management.md",
            "TABLE_OF_CONTENTS.md",
            "GAP_ANALYSIS_REPORT.md",
            "setup/frontend-only.md",
            "troubleshooting/TROUBLESHOOTING_GUIDE.md",
            ".setup/frontend-only.md",
            ".components/frontend/",
            ".components/backend/",
            ".components/infrastructure/",
            ".components/scripts/",
            ".reference/configuration.md",
            ".reference/environment-variables.md",
            ".reference/npm-scripts.md",
            ".docs/docs/architecture/system-overview.md",
            ".docs/docs/architecture/data-models.md",
            ".docs/docs/architecture/api-design.md",
            "../reference/command-reference.md",
            "../QUICK_START.md",
            "DEVELOPMENT_GUIDE.md",
            "../components/",
            "testing-strategies.md",
            "deployment-process.md",
            "../troubleshooting/TROUBLESHOOTING_GUIDE.md",
            "../architecture/system-overview.md",
            "../architecture/data-models.md",
            "../architecture/api-design.md",
            "../setup/local-development.md",
            "../getting-started/SETUP_MASTER.md",
            "../workflows/DEVELOPMENT_GUIDE.md",
            "local-development.md",
            "../components/frontend/README.md",
            "PLATFORM_SETUP.md",
            "CROSS_PLATFORM_SUMMARY.md",
            "DEBUGGING_GUIDE.md",
            "localstack/TROUBLESHOOTING_MASTER.md",
            "commands.md",
            "configuration.md",
            "../../README.md",
            "../../__tests__/README.md",
            "../../../../docs/performance.md",
            "../../../../docs/images.md",
            "design-system-guide.md",
            "component-api-reference.md",
            "testing-guidelines.md",
            "performance-guide.md",
            "accessibility-guide.md",
            "</docs/diagrams/High Level Overview.png> \"High Level Overview\"",
            "</docs/diagrams/Feature Dependency Map.png> \"Feature Dependency Map\"",
            "</docs/diagrams/AWS Amplify Architecture.png> \"AWS Amplify Architecture\"",
            "</docs/diagrams/C4 Model Level 1 - System Context.png> \"System Context\"",
            "</docs/diagrams/C4 Model Level 2 - Containers.png> \"Containers\"",
            "</docs/diagrams/C4 Model Level 3 - Components.png> \"Components\"",
            "</docs/diagrams/User Interaction Sequence Diagram (Search",
            "</docs/diagrams/Data Aggregation Sequence Diagram.png> \"Sequence Diagram\"",
            "</docs/diagrams/CICD Pipeline Diagram.png> \"CI/CD Pipeline Diagram\"",
            "</docs/diagrams/Network Architecture Diagram (VPC",
            "</docs/diagrams/Data Model Diagram (DynamoDB Single-Table Design",
            "</docs/diagrams/State Machine Diagram (AWS Step Functions",
            "</docs/diagrams/Observability & Alerting Flow Diagram.png> \"Observability & Alerting Flow Diagram\"",
            "</docs/diagrams/AWS Configured Access.png> \"AWS Configured Access\"",
            "</docs/diagrams/Image Ingestion and Display.png> \"Image Ingestion and Display\"",
            "01-foundation.md",
            "03-audit-foundation.md",
            "04-central-logging.md",
            "05-networking.md",
            "06-central-security.md",
            "07-app-security.md",
            "08-log-storage.md",
            "09-app-storage.md",
            "10-search.md",
            "11-iam.md",
            "12-compute.md",
            "13-api.md",
            "14-security-monitoring.md",
            "15-app-monitoring.md",
            "16-backup.md",
            "17-governance.md",
            "19-delivery.md",
            "../README.md",
            "MIGRATION_GUIDE.md",
            "TROUBLESHOOTING.md",
            "01-foundation-refactoring-summary.md",
            "02-networking-refactoring-summary.md",
            "03-security-refactoring-summary.md",
            "04-storage-refactoring-summary.md",
            "06-iam-refactoring-summary.md",
            "08-api-refactoring-summary.md",
            "09-monitoring-refactoring-summary.md",
            "STUDIO_CARD_SIZING_FIX_SUMMARY.md",
            "../../../docs/AI_Assisted_Documentation/frontend_improvement/STUDIO_CARD_SIZING_FIX_SUMMARY.md"
          ],
          "duplicateContent": [],
          "validContent": []
        },
        "gaps": [
          "workflows/testing-strategies.md",
          "setup/dependencies.md",
          "setup/docker-setup.md",
          "architecture/system-overview.md",
          "architecture/api-design.md",
          "architecture/data-models.md",
          "architecture/infrastructure/infrastructure.md",
          "architecture/diagrams/",
          "setup/local-development.md",
          "setup/localstack-setup.md",
          "components/frontend/",
          "components/backend/",
          "components/scripts/",
          "testing/",
          "deployment/terraform.md",
          "workflows/deployment-process.md",
          "deployment/ci-cd.md",
          "workflows/monitoring.md",
          "reference/api_reference.md",
          "workflows/data-management.md",
          "TABLE_OF_CONTENTS.md",
          "GAP_ANALYSIS_REPORT.md",
          "setup/frontend-only.md",
          "troubleshooting/TROUBLESHOOTING_GUIDE.md",
          ".setup/frontend-only.md",
          ".components/frontend/",
          ".components/backend/",
          ".components/infrastructure/",
          ".components/scripts/",
          ".reference/configuration.md",
          ".reference/environment-variables.md",
          ".reference/npm-scripts.md",
          ".docs/docs/architecture/system-overview.md",
          ".docs/docs/architecture/data-models.md",
          ".docs/docs/architecture/api-design.md",
          "../reference/command-reference.md",
          "../QUICK_START.md",
          "DEVELOPMENT_GUIDE.md",
          "../components/",
          "testing-strategies.md",
          "deployment-process.md",
          "../troubleshooting/TROUBLESHOOTING_GUIDE.md",
          "../architecture/system-overview.md",
          "../architecture/data-models.md",
          "../architecture/api-design.md",
          "../setup/local-development.md",
          "PLATFORM_SETUP.md",
          "CROSS_PLATFORM_SUMMARY.md",
          "DEBUGGING_GUIDE.md",
          "localstack/TROUBLESHOOTING_MASTER.md",
          "../getting-started/SETUP_MASTER.md",
          "../workflows/DEVELOPMENT_GUIDE.md",
          "local-development.md",
          "../components/frontend/README.md",
          "commands.md",
          "configuration.md",
          "../../README.md",
          "../../__tests__/README.md",
          "../../../../docs/performance.md",
          "../../../../docs/images.md",
          "design-system-guide.md",
          "component-api-reference.md",
          "testing-guidelines.md",
          "performance-guide.md",
          "accessibility-guide.md",
          "</docs/diagrams/High Level Overview.png> \"High Level Overview\"",
          "</docs/diagrams/Feature Dependency Map.png> \"Feature Dependency Map\"",
          "</docs/diagrams/AWS Amplify Architecture.png> \"AWS Amplify Architecture\"",
          "</docs/diagrams/C4 Model Level 1 - System Context.png> \"System Context\"",
          "</docs/diagrams/C4 Model Level 2 - Containers.png> \"Containers\"",
          "</docs/diagrams/C4 Model Level 3 - Components.png> \"Components\"",
          "</docs/diagrams/User Interaction Sequence Diagram (Search",
          "</docs/diagrams/Data Aggregation Sequence Diagram.png> \"Sequence Diagram\"",
          "</docs/diagrams/CICD Pipeline Diagram.png> \"CI/CD Pipeline Diagram\"",
          "</docs/diagrams/Network Architecture Diagram (VPC",
          "</docs/diagrams/Data Model Diagram (DynamoDB Single-Table Design",
          "</docs/diagrams/State Machine Diagram (AWS Step Functions",
          "</docs/diagrams/Observability & Alerting Flow Diagram.png> \"Observability & Alerting Flow Diagram\"",
          "</docs/diagrams/AWS Configured Access.png> \"AWS Configured Access\"",
          "</docs/diagrams/Image Ingestion and Display.png> \"Image Ingestion and Display\"",
          "01-foundation.md",
          "03-audit-foundation.md",
          "04-central-logging.md",
          "05-networking.md",
          "06-central-security.md",
          "07-app-security.md",
          "08-log-storage.md",
          "09-app-storage.md",
          "10-search.md",
          "11-iam.md",
          "12-compute.md",
          "13-api.md",
          "14-security-monitoring.md",
          "15-app-monitoring.md",
          "16-backup.md",
          "17-governance.md",
          "19-delivery.md",
          "../README.md",
          "MIGRATION_GUIDE.md",
          "TROUBLESHOOTING.md",
          "01-foundation-refactoring-summary.md",
          "02-networking-refactoring-summary.md",
          "03-security-refactoring-summary.md",
          "04-storage-refactoring-summary.md",
          "06-iam-refactoring-summary.md",
          "08-api-refactoring-summary.md",
          "09-monitoring-refactoring-summary.md",
          "STUDIO_CARD_SIZING_FIX_SUMMARY.md",
          "../../../docs/AI_Assisted_Documentation/frontend_improvement/STUDIO_CARD_SIZING_FIX_SUMMARY.md"
        ]
      },
      "errors": []
    },
    "validation": {
      "name": "validation",
      "success": true,
      "results": {
        "syntax": {
          "errors": [],
          "warnings": []
        },
        "links": {
          "errors": {
            "isValid": true,
            "brokenReferences": [],
            "suggestions": []
          },
          "warnings": [],
          "total": 0
        },
        "structure": {
          "errors": [],
          "warnings": []
        },
        "freshness": {
          "warnings": [],
          "errors": []
        }
      },
      "errors": []
    },
    "commands": {
      "name": "commands",
      "success": true,
      "results": {
        "commands": [
          {
            "name": "local:start",
            "script": "node scripts/deployment/platform-launcher.js start",
            "description": "Local development command",
            "category": "development",
            "parameters": [
              {
                "name": "l",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:stop",
            "script": "node scripts/deployment/platform-launcher.js stop",
            "description": "Local development command",
            "category": "deployment",
            "parameters": [
              {
                "name": "l",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:restart",
            "script": "npm run local:stop && npm run local:start",
            "description": "Local development command",
            "category": "development",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:start:windows",
            "script": "scripts\\start-local.bat",
            "description": "Local development command",
            "category": "development",
            "parameters": [
              {
                "name": "l",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:start:unix",
            "script": "bash scripts/start-local.sh",
            "description": "Local development command",
            "category": "development",
            "parameters": [
              {
                "name": "l",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:stop:windows",
            "script": "scripts\\stop-local.bat",
            "description": "Local development command",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "l",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:stop:unix",
            "script": "bash scripts/stop-local.sh",
            "description": "Local development command",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "l",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:logs",
            "script": "docker-compose -f devtools/docker/docker-compose.local.yml logs -f",
            "description": "Local development command",
            "category": "development",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:logs:backend",
            "script": "docker-compose -f devtools/docker/docker-compose.local.yml logs -f backend",
            "description": "Local development command",
            "category": "development",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:logs:frontend",
            "script": "docker-compose -f devtools/docker/docker-compose.local.yml logs -f frontend",
            "description": "Local development command",
            "category": "development",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:logs:localstack",
            "script": "docker-compose -f devtools/docker/docker-compose.local.yml logs -f localstack",
            "description": "Local development command",
            "category": "development",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:logs:swagger",
            "script": "docker-compose -f devtools/docker/docker-compose.local.yml logs -f swagger-ui",
            "description": "Local development command",
            "category": "development",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "u",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:logs:viewer",
            "script": "node scripts/log-viewer.js",
            "description": "Local development command",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:health",
            "script": "node scripts/monitoring/health-check.js",
            "description": "Local development command",
            "category": "monitoring",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:clean",
            "script": "node scripts/deployment/platform-launcher.js clean",
            "description": "Local development command",
            "category": "deployment",
            "parameters": [
              {
                "name": "l",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:reset",
            "script": "npm run local:clean && npm run local:start",
            "description": "Local development command",
            "category": "data",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:status",
            "script": "docker-compose -f devtools/docker/docker-compose.local.yml ps",
            "description": "Local development command",
            "category": "development",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:utils",
            "script": "node scripts/dev-utils.js",
            "description": "Local development command",
            "category": "development",
            "parameters": [
              {
                "name": "u",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:test-api",
            "script": "node scripts/dev-utils.js test",
            "description": "Local development command",
            "category": "development",
            "parameters": [
              {
                "name": "u",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:cleanup",
            "script": "node scripts/dev-utils.js cleanup",
            "description": "Local development command",
            "category": "development",
            "parameters": [
              {
                "name": "u",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:report",
            "script": "node scripts/dev-utils.js report",
            "description": "Local development command",
            "category": "development",
            "parameters": [
              {
                "name": "u",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:platform-info",
            "script": "node scripts/deployment/platform-launcher.js info",
            "description": "Local development command",
            "category": "deployment",
            "parameters": [
              {
                "name": "l",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:docker-info",
            "script": "node scripts/deployment/platform-launcher.js docker-info",
            "description": "Local development command",
            "category": "deployment",
            "parameters": [
              {
                "name": "l",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:monitor",
            "script": "node scripts/resource-monitor.js full",
            "description": "Local development command",
            "category": "monitoring",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:monitor:live",
            "script": "node scripts/resource-monitor.js monitor",
            "description": "Local development command",
            "category": "monitoring",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:resources",
            "script": "node scripts/resource-monitor.js recommendations",
            "description": "Local development command",
            "category": "monitoring",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed",
            "script": "cd scripts && npm run seed --workspace=scripts --workspace=scripts",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed:clean",
            "script": "cd scripts && npm run seed --workspace=scripts --workspace=scripts:clean",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed:validate",
            "script": "cd scripts && npm run seed --workspace=scripts --workspace=scripts:validate",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "config",
            "script": "cd scripts && npm run config",
            "description": "Custom command",
            "category": "uncategorized",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "config:validate",
            "script": "cd scripts && npm run config:validate",
            "description": "Custom command",
            "category": "monitoring",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "config:test",
            "script": "cd scripts && node test-configuration.js",
            "description": "Runs Node.js script",
            "category": "testing",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "state",
            "script": "cd scripts && npm run state",
            "description": "Custom command",
            "category": "uncategorized",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "state:reset",
            "script": "cd scripts && npm run state:reset",
            "description": "Custom command",
            "category": "data",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "setup-data",
            "script": "node scripts/data-cli.js setup-data",
            "description": "Sets up environment or data",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "setup-data:frontend-only",
            "script": "node scripts/data-cli.js setup-data --frontend-only",
            "description": "Sets up environment or data",
            "category": "data",
            "parameters": [
              {
                "name": "frontend",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "o",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "setup-data:images-only",
            "script": "node scripts/data-cli.js setup-data --images-only",
            "description": "Sets up environment or data",
            "category": "data",
            "parameters": [
              {
                "name": "images",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "o",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "setup-data:force",
            "script": "node scripts/data-cli.js setup-data --force",
            "description": "Sets up environment or data",
            "category": "data",
            "parameters": [
              {
                "name": "force",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "reset-data",
            "script": "node scripts/data-cli.js reset-data",
            "description": "Resets data or state",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "reset-data:clean",
            "script": "node scripts/data-cli.js reset-data clean",
            "description": "Resets data or state",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "reset-data:fresh",
            "script": "node scripts/data-cli.js reset-data fresh",
            "description": "Resets data or state",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "reset-data:minimal",
            "script": "node scripts/data-cli.js reset-data minimal",
            "description": "Resets data or state",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "reset-data:search-ready",
            "script": "node scripts/data-cli.js reset-data search-ready",
            "description": "Resets data or state",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "reset-data:location-test",
            "script": "node scripts/data-cli.js reset-data location-test",
            "description": "Resets data or state",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "reset-data:style-test",
            "script": "node scripts/data-cli.js reset-data style-test",
            "description": "Resets data or state",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "reset-data:performance-test",
            "script": "node scripts/data-cli.js reset-data performance-test",
            "description": "Resets data or state",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "reset-data:frontend-ready",
            "script": "node scripts/data-cli.js reset-data frontend-ready",
            "description": "Resets data or state",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed-scenario",
            "script": "node scripts/data-cli.js seed-scenario",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed-scenario:minimal",
            "script": "node scripts/data-cli.js seed-scenario minimal",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed-scenario:search-basic",
            "script": "node scripts/data-cli.js seed-scenario search-basic",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "b",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed-scenario:london-artists",
            "script": "node scripts/data-cli.js seed-scenario london-artists",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed-scenario:high-rated",
            "script": "node scripts/data-cli.js seed-scenario high-rated",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed-scenario:new-artists",
            "script": "node scripts/data-cli.js seed-scenario new-artists",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed-scenario:booking-available",
            "script": "node scripts/data-cli.js seed-scenario booking-available",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed-scenario:portfolio-rich",
            "script": "node scripts/data-cli.js seed-scenario portfolio-rich",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed-scenario:multi-style",
            "script": "node scripts/data-cli.js seed-scenario multi-style",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed-scenario:pricing-range",
            "script": "node scripts/data-cli.js seed-scenario pricing-range",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed-scenario:full-dataset",
            "script": "node scripts/data-cli.js seed-scenario full-dataset",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-data",
            "script": "node scripts/data-cli.js validate-data",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-data:consistency",
            "script": "node scripts/data-cli.js validate-data consistency",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-data:images",
            "script": "node scripts/data-cli.js validate-data images",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-data:studios",
            "script": "node scripts/data-cli.js validate-studios",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-data:scenarios",
            "script": "node scripts/data-cli.js validate-data scenarios",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-studios",
            "script": "node scripts/data-cli.js validate-studios",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-studios:data",
            "script": "node scripts/data-cli.js validate-studios data",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-studios:relationships",
            "script": "node scripts/data-cli.js validate-studios relationships",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-studios:images",
            "script": "node scripts/data-cli.js validate-studios images",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-studios:addresses",
            "script": "node scripts/data-cli.js validate-studios addresses",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-studios:consistency",
            "script": "node scripts/data-cli.js validate-studios consistency",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed-studios",
            "script": "node scripts/data-cli.js seed-studios",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed-studios:force",
            "script": "node scripts/data-cli.js seed-studios --force",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "force",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "seed-studios:validate",
            "script": "node scripts/data-cli.js seed-studios --validate",
            "description": "Seeds data",
            "category": "data",
            "parameters": [
              {
                "name": "validate",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "reset-studios",
            "script": "node scripts/data-cli.js reset-studios",
            "description": "Resets data or state",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "reset-studios:preserve",
            "script": "node scripts/data-cli.js reset-studios --preserve-relationships",
            "description": "Resets data or state",
            "category": "data",
            "parameters": [
              {
                "name": "preserve",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "studio-status",
            "script": "node scripts/data-cli.js studio-status",
            "description": "Runs Node.js script",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "process-studio-images",
            "script": "node scripts/data-cli.js process-studio-images",
            "description": "Runs Node.js script",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "process-studio-images:force",
            "script": "node scripts/data-cli.js process-studio-images --force",
            "description": "Runs Node.js script",
            "category": "data",
            "parameters": [
              {
                "name": "force",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "process-studio-images:validate",
            "script": "node scripts/data-cli.js process-studio-images --validate",
            "description": "Runs Node.js script",
            "category": "data",
            "parameters": [
              {
                "name": "validate",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "manage-studio-relationships",
            "script": "node scripts/data-cli.js manage-studio-relationships",
            "description": "Runs Node.js script",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "manage-studio-relationships:validate",
            "script": "node scripts/data-cli.js manage-studio-relationships validate",
            "description": "Runs Node.js script",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "manage-studio-relationships:rebuild",
            "script": "node scripts/data-cli.js manage-studio-relationships rebuild",
            "description": "Runs Node.js script",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "manage-studio-relationships:repair",
            "script": "node scripts/data-cli.js manage-studio-relationships repair",
            "description": "Runs Node.js script",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "manage-studio-relationships:report",
            "script": "node scripts/data-cli.js manage-studio-relationships report",
            "description": "Runs Node.js script",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-studio-data-e2e",
            "script": "node scripts/data-cli.js validate-studio-data-e2e",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-studio-data-e2e:verbose",
            "script": "node scripts/data-cli.js validate-studio-data-e2e --verbose",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "verbose",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-studio-data-e2e:save-report",
            "script": "node scripts/data-cli.js validate-studio-data-e2e --save-report",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "save",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate-studio-data-e2e:full",
            "script": "node scripts/data-cli.js validate-studio-data-e2e --verbose --save-report",
            "description": "Validates data or configuration",
            "category": "data",
            "parameters": [
              {
                "name": "verbose",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "save",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "health-check",
            "script": "node scripts/data-cli.js health-check",
            "description": "Checks system health",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "studio-health",
            "script": "node scripts/health-monitor.js health",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "studio-troubleshoot",
            "script": "node scripts/health-monitor.js troubleshoot",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "data-status",
            "script": "node scripts/data-cli.js data-status",
            "description": "Runs Node.js script",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "scenarios",
            "script": "node scripts/data-cli.js scenarios",
            "description": "Runs Node.js script",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "reset-states",
            "script": "node scripts/data-cli.js reset-states",
            "description": "Resets data or state",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "help",
            "script": "node scripts/data-cli.js help",
            "description": "Runs Node.js script",
            "category": "data",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:frontend",
            "script": "cd frontend && npm run dev",
            "description": "Starts development server",
            "category": "development",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:backend",
            "script": "docker-compose -f devtools/docker/docker-compose.local.yml up backend",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:unit",
            "script": "npm run test --workspace=frontend && npm run test --workspace=backend && npm run test --workspace=scripts",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:unit:frontend",
            "script": "npm run test --workspace=frontend",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:unit:backend",
            "script": "npm run test --workspace=backend",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:unit:scripts",
            "script": "npm run test --workspace=scripts",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:unit:coverage",
            "script": "npm run test:coverage --workspace=frontend && npm run test:coverage --workspace=backend && npm run test:coverage --workspace=scripts",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:integration",
            "script": "npm test --workspace=@tattoo-directory/integration-tests",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:integration:api",
            "script": "npm run test:api --workspace=@tattoo-directory/integration-tests",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:integration:data",
            "script": "npm run test:data --workspace=@tattoo-directory/integration-tests",
            "description": "Runs tests",
            "category": "data",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:integration:setup",
            "script": "npm run test:setup --workspace=@tattoo-directory/integration-tests",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:integration:cleanup",
            "script": "npm run test:cleanup --workspace=@tattoo-directory/integration-tests",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:integration:coverage",
            "script": "npm run test:coverage --workspace=@tattoo-directory/integration-tests",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:e2e",
            "script": "npm test --workspace=tattoo-directory-e2e-tests",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:e2e:setup",
            "script": "npm run setup --workspace=tattoo-directory-e2e-tests",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:e2e:workflows",
            "script": "npm run test:workflows --workspace=tattoo-directory-e2e-tests",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:e2e:integration",
            "script": "cd tests/e2e && node run-tests.js tests/integration/**/*.test.js",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:e2e:visual",
            "script": "cd tests/e2e && node run-tests.js tests/visual/**/*.test.js",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:e2e:headless",
            "script": "cd tests/e2e && HEADLESS=false npm test",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:e2e:debug",
            "script": "cd tests/e2e && DEBUG=true HEADLESS=false npm test",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:e2e:clean",
            "script": "cd tests/e2e && npm run local:clean",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:studio",
            "script": "cd scripts && npm test -- --testPathPattern=studio",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "testPathPattern",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:studio:unit",
            "script": "cd scripts && npm test -- --testPathPattern=studio.*test.js",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "testPathPattern",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:studio:integration",
            "script": "cd scripts && npm test -- --testPathPattern=studio-pipeline.test.js",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "testPathPattern",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:studio:relationships",
            "script": "cd scripts && npm test -- --testPathPattern=relationship-manager.test.js",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "testPathPattern",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:studio:health",
            "script": "cd scripts && npm test -- --testPathPattern=studio-health",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "testPathPattern",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "h",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:studio:cli",
            "script": "cd scripts && npm test -- --testPathPattern=studio-cli-commands.test.js",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "testPathPattern",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:studio:data",
            "script": "cd scripts && npm test -- --testPathPattern=studio-data",
            "description": "Runs tests",
            "category": "data",
            "parameters": [
              {
                "name": "testPathPattern",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:studio:frontend",
            "script": "cd scripts && npm test -- --testPathPattern=studio-frontend-mock.test.js",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "testPathPattern",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:studio:coverage",
            "script": "cd scripts && npm test -- --testPathPattern=studio --coverage",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "testPathPattern",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "coverage",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:studio:watch",
            "script": "cd scripts && npm test -- --testPathPattern=studio --watch",
            "description": "Runs tests",
            "category": "development",
            "parameters": [
              {
                "name": "testPathPattern",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "watch",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "studio-health:comprehensive",
            "script": "node scripts/health-monitor.js health --comprehensive",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "comprehensive",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "studio-health:quick",
            "script": "node scripts/health-monitor.js health --quick",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "quick",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "q",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "studio-health:relationships",
            "script": "node scripts/health-monitor.js health --focus=relationships",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "focus",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "studio-health:images",
            "script": "node scripts/health-monitor.js health --focus=images",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "focus",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "studio-health:addresses",
            "script": "node scripts/health-monitor.js health --focus=addresses",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "focus",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "studio:dev-setup",
            "script": "npm run reset-data --workspace=scripts-data --workspace=scripts-studios && npm run seed --workspace=scripts --workspace=scripts-studios --scenario studio-diverse && npm run validate --workspace=scripts/documentation-analysis --workspace=scripts/documentation-analysis-studios",
            "description": "Custom command",
            "category": "data",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "scenario",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "studio:quick-test",
            "script": "npm run seed --workspace=scripts --workspace=scripts-studios --scenario minimal && npm run test:studio:unit",
            "description": "Custom command",
            "category": "data",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "scenario",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "studio:full-test",
            "script": "npm run studio:dev-setup && npm run test:studio && npm run studio-health",
            "description": "Custom command",
            "category": "development",
            "parameters": [
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "h",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "debug:start",
            "script": "ENABLE_BACKEND_DEBUG=true ENABLE_FRONTEND_DEBUG=true npm run local:start",
            "description": "Custom command",
            "category": "development",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "debug:backend",
            "script": "ENABLE_BACKEND_DEBUG=true npm run local:start",
            "description": "Custom command",
            "category": "development",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "debug:frontend",
            "script": "ENABLE_FRONTEND_DEBUG=true npm run local:start",
            "description": "Custom command",
            "category": "development",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "logs:start",
            "script": "node scripts/log-aggregator.js",
            "description": "Runs Node.js script",
            "category": "development",
            "parameters": [
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "logs:view",
            "script": "node scripts/log-viewer.js --follow",
            "description": "Runs Node.js script",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "follow",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "logs:backend",
            "script": "node scripts/log-viewer.js --follow backend",
            "description": "Runs Node.js script",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "follow",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "logs:frontend",
            "script": "node scripts/log-viewer.js --follow frontend",
            "description": "Runs Node.js script",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "follow",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "logs:errors",
            "script": "node scripts/log-viewer.js --level ERROR --follow",
            "description": "Runs Node.js script",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "level",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "follow",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "l",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "monitor:localstack",
            "script": "node scripts/localstack-monitor.js watch",
            "description": "Monitors system or performance",
            "category": "development",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "monitor:health",
            "script": "node scripts/localstack-monitor.js health",
            "description": "Monitors system or performance",
            "category": "monitoring",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "monitor:report",
            "script": "node scripts/localstack-monitor.js report",
            "description": "Monitors system or performance",
            "category": "monitoring",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "monitor:reset",
            "script": "node scripts/localstack-monitor.js reset",
            "description": "Monitors system or performance",
            "category": "data",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "performance:monitor",
            "script": "node scripts/performance-monitor.js",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "performance:monitor:continuous",
            "script": "node scripts/performance-monitor.js --continuous",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "continuous",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "performance:monitor:startup",
            "script": "node scripts/performance-monitor.js --startup",
            "description": "Runs Node.js script",
            "category": "development",
            "parameters": [
              {
                "name": "startup",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "performance:resources",
            "script": "node scripts/resource-usage-monitor.js --continuous",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "continuous",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "u",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "performance:resources:once",
            "script": "node scripts/resource-usage-monitor.js --once",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "once",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "u",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "o",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "performance:benchmark",
            "script": "node scripts/performance-benchmarks.js --full",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "full",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "b",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "performance:benchmark:quick",
            "script": "node scripts/performance-benchmarks.js --quick",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "quick",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "b",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "q",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "optimize:startup",
            "script": "node scripts/startup-optimizer.js --optimize",
            "description": "Runs Node.js script",
            "category": "development",
            "parameters": [
              {
                "name": "optimize",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "o",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "optimize:startup:benchmark",
            "script": "node scripts/startup-optimizer.js --benchmark",
            "description": "Runs Node.js script",
            "category": "development",
            "parameters": [
              {
                "name": "benchmark",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "o",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "b",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "optimize:cache",
            "script": "node scripts/docker-cache-optimizer.js --optimize",
            "description": "Runs Node.js script",
            "category": "deployment",
            "parameters": [
              {
                "name": "optimize",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "o",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "optimize:cache:analyze",
            "script": "node scripts/docker-cache-optimizer.js --analyze",
            "description": "Runs Node.js script",
            "category": "deployment",
            "parameters": [
              {
                "name": "analyze",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "o",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "performance:dashboard",
            "script": "node scripts/performance-dashboard.js",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "performance:export",
            "script": "node scripts/performance-dashboard.js --export",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "export",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "performance:demo",
            "script": "node scripts/performance-demo.js",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "performance:test",
            "script": "node scripts/test-performance-monitoring.js",
            "description": "Runs Node.js script",
            "category": "testing",
            "parameters": [
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "monitor:comprehensive",
            "script": "node scripts/start-monitoring.js start",
            "description": "Monitors system or performance",
            "category": "development",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "monitor:validate",
            "script": "node scripts/start-monitoring.js validate",
            "description": "Monitors system or performance",
            "category": "development",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "monitor:status",
            "script": "node scripts/start-monitoring.js status",
            "description": "Monitors system or performance",
            "category": "development",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "monitor:config",
            "script": "node scripts/start-monitoring.js config show",
            "description": "Monitors system or performance",
            "category": "development",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "monitor:config:reset",
            "script": "node scripts/start-monitoring.js config reset",
            "description": "Monitors system or performance",
            "category": "data",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "monitor:dashboard",
            "script": "node scripts/comprehensive-monitoring-dashboard.js",
            "description": "Monitors system or performance",
            "category": "monitoring",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "monitor:health-advanced",
            "script": "node scripts/health-monitor.js check",
            "description": "Monitors system or performance",
            "category": "monitoring",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "monitor:health-continuous",
            "script": "node scripts/health-monitor.js monitor",
            "description": "Monitors system or performance",
            "category": "monitoring",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "monitor:environment",
            "script": "node scripts/environment-health-validator.js validate",
            "description": "Monitors system or performance",
            "category": "monitoring",
            "parameters": [
              {
                "name": "h",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "monitor:environment-continuous",
            "script": "node scripts/environment-health-validator.js monitor",
            "description": "Monitors system or performance",
            "category": "monitoring",
            "parameters": [
              {
                "name": "h",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "alerts:test",
            "script": "node scripts/alert-system.js",
            "description": "Runs Node.js script",
            "category": "testing",
            "parameters": [
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:monitoring",
            "script": "node scripts/test-monitoring-system.js",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:hot-reload",
            "script": "node dev-tools/hot-reload-proxy.js",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:mock-data",
            "script": "node dev-tools/mock-data-generator.js",
            "description": "Starts development server",
            "category": "data",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "g",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:debug-logger",
            "script": "node dev-tools/debug-logger.js",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "l",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:error-tester",
            "script": "node dev-tools/error-scenario-tester.js",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:mock-dataset",
            "script": "node dev-tools/mock-data-generator.js dataset",
            "description": "Starts development server",
            "category": "data",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "g",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:mock-artists",
            "script": "node dev-tools/mock-data-generator.js artists --count 20",
            "description": "Starts development server",
            "category": "data",
            "parameters": [
              {
                "name": "count",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "g",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:mock-search",
            "script": "node dev-tools/mock-data-generator.js search --style traditional",
            "description": "Starts development server",
            "category": "data",
            "parameters": [
              {
                "name": "style",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "g",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:mock-errors",
            "script": "node dev-tools/mock-data-generator.js error --type validation",
            "description": "Starts development server",
            "category": "data",
            "parameters": [
              {
                "name": "type",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "g",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:test-errors",
            "script": "node dev-tools/error-scenario-tester.js test-suite",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:list-scenarios",
            "script": "node dev-tools/error-scenario-tester.js list",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:activate-error",
            "script": "node dev-tools/error-scenario-tester.js activate",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:deactivate-errors",
            "script": "node dev-tools/error-scenario-tester.js deactivate-all",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:debug-test",
            "script": "node dev-tools/debug-logger.js test",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "l",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:debug-export",
            "script": "node dev-tools/debug-logger.js export",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "l",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:advanced",
            "script": "node dev-tools/advanced-dev-manager.js start",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:advanced:stop",
            "script": "node dev-tools/advanced-dev-manager.js stop",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:advanced:restart",
            "script": "node dev-tools/advanced-dev-manager.js restart",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:advanced:status",
            "script": "node dev-tools/advanced-dev-manager.js status",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev:advanced:health",
            "script": "node dev-tools/advanced-dev-manager.js health",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:all",
            "script": "npm run test:unit && npm run test:integration && npm run test:e2e",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:comprehensive",
            "script": "node scripts/comprehensive-test-runner.js",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:final-integration",
            "script": "node scripts/final-integration-tester.js",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:frontend-sync-errors",
            "script": "node scripts/run-frontend-sync-error-tests.js",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "test:frontend-sync-errors:verbose",
            "script": "node scripts/run-frontend-sync-error-tests.js --verbose",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "verbose",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate:cross-platform",
            "script": "node scripts/cross-platform-validator.js",
            "description": "Validates data or configuration",
            "category": "monitoring",
            "parameters": [
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate:parity",
            "script": "node scripts/comprehensive-parity-validator.js validate",
            "description": "Validates data or configuration",
            "category": "monitoring",
            "parameters": [
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate:production-parity",
            "script": "node scripts/production-parity-validator.js validate",
            "description": "Validates data or configuration",
            "category": "monitoring",
            "parameters": [
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate:deployment",
            "script": "node scripts/deployment-simulation-tester.js",
            "description": "Validates data or configuration",
            "category": "testing",
            "parameters": [
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate:readiness",
            "script": "node scripts/production-readiness-checklist.js validate",
            "description": "Validates data or configuration",
            "category": "monitoring",
            "parameters": [
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate:all",
            "script": "npm run test:final-integration && npm run validate --workspace=scripts/documentation-analysis --workspace=scripts/documentation-analysis:cross-platform && npm run validate --workspace=scripts/documentation-analysis --workspace=scripts/documentation-analysis:parity",
            "description": "Validates data or configuration",
            "category": "testing",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "validate:complete",
            "script": "npm run test:comprehensive",
            "description": "Validates data or configuration",
            "category": "testing",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "ci:test",
            "script": "npm run test:comprehensive",
            "description": "Custom command",
            "category": "testing",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "ci:validate",
            "script": "npm run validate --workspace=scripts/documentation-analysis --workspace=scripts/documentation-analysis:complete",
            "description": "Custom command",
            "category": "monitoring",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "security:validate",
            "script": "node scripts/security/security-validator.js validate",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "security:validate-env",
            "script": "node scripts/security/environment-validator.js validate",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "security:validate-network",
            "script": "node scripts/security/docker-network-security.js validate",
            "description": "Runs Node.js script",
            "category": "deployment",
            "parameters": [
              {
                "name": "n",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "security:validate-access",
            "script": "node scripts/security/access-control-manager.js validate",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "security:scan-images",
            "script": "node scripts/security/docker-image-scanner.js",
            "description": "Runs Node.js script",
            "category": "deployment",
            "parameters": [
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "security:fix",
            "script": "node scripts/security/security-validator.js fix",
            "description": "Runs Node.js script",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "security:configure",
            "script": "node scripts/security/security-validator.js configure",
            "description": "Runs Node.js script",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "security:monitor",
            "script": "node scripts/security/security-validator.js monitor",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "security:report",
            "script": "node scripts/security/security-validator.js report",
            "description": "Runs Node.js script",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "security:template",
            "script": "node scripts/security/environment-validator.js template",
            "description": "Runs Node.js script",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "security:sanitize",
            "script": "node scripts/security/environment-validator.js sanitize",
            "description": "Runs Node.js script",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "security:configure-network",
            "script": "node scripts/security/docker-network-security.js configure",
            "description": "Runs Node.js script",
            "category": "deployment",
            "parameters": [
              {
                "name": "n",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "security:configure-access",
            "script": "node scripts/security/access-control-manager.js configure",
            "description": "Runs Node.js script",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:start:secure",
            "script": "npm run security:validate && npm run local:start",
            "description": "Local development command",
            "category": "development",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "local:emergency-stop",
            "script": "docker-compose -f devtools/docker/docker-compose.local.yml down --remove-orphans && docker network prune -f",
            "description": "Local development command",
            "category": "development",
            "parameters": [
              {
                "name": "remove",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "o",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:consolidate",
            "script": "node scripts/documentation-consolidation-pipeline.js",
            "description": "Runs Node.js script",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:validate",
            "script": "node scripts/documentation-consolidation-pipeline.js --validate-only",
            "description": "Runs Node.js script",
            "category": "monitoring",
            "parameters": [
              {
                "name": "validate",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "o",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:generate",
            "script": "npm run docs:consolidate",
            "description": "Custom command",
            "category": "uncategorized",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:test",
            "script": "node scripts/test-documentation-system.js",
            "description": "Runs Node.js script",
            "category": "testing",
            "parameters": [
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:test-e2e",
            "script": "node scripts/test-documentation-system.js",
            "description": "Runs Node.js script",
            "category": "testing",
            "parameters": [
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:generate-foundation",
            "script": "cd scripts/documentation-analysis && npm run generate-foundation",
            "description": "Custom command",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:validate-foundation",
            "script": "cd scripts/documentation-analysis && npm run validate-foundation",
            "description": "Custom command",
            "category": "monitoring",
            "parameters": [
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:fix-consolidated-links",
            "script": "cd scripts/documentation-analysis && npm run fix-consolidated-links",
            "description": "Custom command",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "l",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:pipeline",
            "script": "cd scripts/documentation-analysis && npm run pipeline",
            "description": "Custom command",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:pipeline:dry-run",
            "script": "cd scripts/documentation-analysis && npm run pipeline:dry-run",
            "description": "Custom command",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:gap-analysis",
            "script": "cd scripts/documentation-analysis && npm run gap-analysis",
            "description": "Custom command",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:fix-outdated",
            "script": "cd scripts/documentation-analysis && npm run fix-outdated-content",
            "description": "Custom command",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "o",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:consolidate-duplicates",
            "script": "cd scripts/documentation-analysis && npm run consolidate-duplicates",
            "description": "Custom command",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:create-missing",
            "script": "cd scripts/documentation-analysis && npm run create-missing-docs",
            "description": "Custom command",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:file-mapping",
            "script": "cd scripts/documentation-analysis && npm run file-mapping",
            "description": "Custom command",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:delete-duplicates",
            "script": "cd scripts/documentation-analysis && npm run delete-duplicates",
            "description": "Custom command",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "docs:health-summary",
            "script": "cd scripts/documentation-analysis && npm run docs-health-summary",
            "description": "Custom command",
            "category": "monitoring",
            "parameters": [
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "h",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\package.json"
          },
          {
            "name": "dev",
            "script": "next dev",
            "description": "Starts development server",
            "category": "development",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "dev:docker",
            "script": "next dev --hostname 0.0.0.0 --port 3000",
            "description": "Starts development server",
            "category": "development",
            "parameters": [
              {
                "name": "hostname",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "port",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "h",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "build",
            "script": "next build",
            "description": "Builds the application for production",
            "category": "deployment",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "build:analyze",
            "script": "npm run build && npm run validate --workspace=scripts/documentation-analysis --workspace=scripts/documentation-analysis:build",
            "description": "Builds the application for production",
            "category": "deployment",
            "parameters": [
              {
                "name": "workspace",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "a",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "start",
            "script": "next start",
            "description": "Starts the application",
            "category": "development",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "lint",
            "script": "next lint",
            "description": "Lints code for style and errors",
            "category": "uncategorized",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test",
            "script": "jest",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:watch",
            "script": "jest --watch",
            "description": "Runs tests",
            "category": "development",
            "parameters": [
              {
                "name": "watch",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:coverage",
            "script": "jest --coverage",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "coverage",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:integration",
            "script": "node src/__tests__/runIntegrationTests.js",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:integration:coverage",
            "script": "node src/__tests__/runIntegrationTests.js --coverage",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "coverage",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:integration:watch",
            "script": "node src/__tests__/runIntegrationTests.js --watch",
            "description": "Runs tests",
            "category": "development",
            "parameters": [
              {
                "name": "watch",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:accessibility",
            "script": "playwright test tests/e2e/accessibility",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:visual",
            "script": "playwright test tests/e2e/visual-regression",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:cross-page",
            "script": "jest --testPathPattern=CrossPageConsistency.test.jsx",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "testPathPattern",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e",
            "script": "playwright test",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:headed",
            "script": "playwright test --headed",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "headed",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "h",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:debug",
            "script": "playwright test --debug",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "debug",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:ui",
            "script": "playwright test --ui",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "ui",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "u",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:visual",
            "script": "playwright test tests/e2e/visual-regression",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:accessibility",
            "script": "playwright test tests/e2e/accessibility",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:theme",
            "script": "playwright test tests/e2e/theme-testing",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:responsive",
            "script": "playwright test tests/e2e/responsive",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:comprehensive",
            "script": "playwright test tests/e2e/comprehensive-page-coverage.test.ts",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:portfolio",
            "script": "playwright test tests/e2e/portfolio-gallery-coverage.test.ts",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "g",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:auth",
            "script": "playwright test tests/e2e/authentication-flow-coverage.test.ts",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:search",
            "script": "playwright test tests/e2e/search-interface-coverage.test.ts",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:errors",
            "script": "playwright test tests/e2e/error-pages-coverage.test.ts",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:runner",
            "script": "playwright test tests/e2e/comprehensive-test-runner.test.ts",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:all-coverage",
            "script": "playwright test tests/e2e/comprehensive-page-coverage.test.ts tests/e2e/portfolio-gallery-coverage.test.ts tests/e2e/authentication-flow-coverage.test.ts tests/e2e/search-interface-coverage.test.ts tests/e2e/error-pages-coverage.test.ts",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "g",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "f",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:execution",
            "script": "playwright test tests/e2e/comprehensive-test-execution.test.ts",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:orchestrator",
            "script": "playwright test tests/e2e/comprehensive-test-runner-orchestrator.test.ts",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "o",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:full-suite",
            "script": "playwright test tests/e2e/comprehensive-test-execution.test.ts tests/e2e/comprehensive-test-runner-orchestrator.test.ts",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "o",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:comprehensive",
            "script": "node scripts/run-comprehensive-tests.js",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:comprehensive:core",
            "script": "node scripts/run-comprehensive-tests.js --suite=core",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "suite",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:comprehensive:search",
            "script": "node scripts/run-comprehensive-tests.js --suite=search",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "suite",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:comprehensive:portfolio",
            "script": "node scripts/run-comprehensive-tests.js --suite=portfolio",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "suite",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:comprehensive:auth",
            "script": "node scripts/run-comprehensive-tests.js --suite=auth",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "suite",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:comprehensive:errors",
            "script": "node scripts/run-comprehensive-tests.js --suite=errors",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "suite",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:comprehensive:execution",
            "script": "node scripts/run-comprehensive-tests.js --suite=execution",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "suite",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:comprehensive:orchestrator",
            "script": "node scripts/run-comprehensive-tests.js --suite=orchestrator",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "suite",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:comprehensive:dark",
            "script": "node scripts/run-comprehensive-tests.js --theme=dark",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "theme",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:comprehensive:mobile",
            "script": "node scripts/run-comprehensive-tests.js --viewport=mobile",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "viewport",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:comprehensive:headed",
            "script": "node scripts/run-comprehensive-tests.js --headed",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "headed",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "h",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:comprehensive:debug",
            "script": "node scripts/run-comprehensive-tests.js --debug",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "debug",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "d",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:e2e:report",
            "script": "playwright show-report",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:ui-audit",
            "script": "node scripts/ci-integration.js run comprehensive",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:ui-audit:visual",
            "script": "node scripts/ci-integration.js run visual-regression",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:ui-audit:accessibility",
            "script": "node scripts/ci-integration.js run accessibility",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:ui-audit:theme",
            "script": "node scripts/ci-integration.js run theme-testing",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:ui-audit:responsive",
            "script": "node scripts/ci-integration.js run responsive",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "ci:setup",
            "script": "node scripts/setup-ci.js",
            "description": "Runs Node.js script",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "ci:test-integration",
            "script": "node scripts/ci-integration.js test-integration",
            "description": "Runs Node.js script",
            "category": "testing",
            "parameters": [
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "ci:test-config",
            "script": "node scripts/test-ci-config.js",
            "description": "Runs Node.js script",
            "category": "testing",
            "parameters": [
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "ci:status",
            "script": "node scripts/ci-status.js",
            "description": "Runs Node.js script",
            "category": "uncategorized",
            "parameters": [
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "ci:local-workflow",
            "script": "node scripts/ci-integration.js run",
            "description": "Runs Node.js script",
            "category": "testing",
            "parameters": [
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "baselines:update",
            "script": "playwright test tests/e2e/visual-regression --update-snapshots",
            "description": "Runs Playwright tests",
            "category": "development",
            "parameters": [
              {
                "name": "update",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "u",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "s",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "baselines:validate",
            "script": "playwright test tests/e2e/visual-regression --reporter=list",
            "description": "Runs Playwright tests",
            "category": "testing",
            "parameters": [
              {
                "name": "reporter",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "r",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "fix:build",
            "script": "node scripts/fix-build-issues.js",
            "description": "Runs Node.js script",
            "category": "deployment",
            "parameters": [
              {
                "name": "b",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "i",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "validate:build",
            "script": "node scripts/validate-build.js",
            "description": "Validates data or configuration",
            "category": "deployment",
            "parameters": [
              {
                "name": "b",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "deploy:prep",
            "script": "node scripts/deploy-production.js",
            "description": "Deploys the application",
            "category": "deployment",
            "parameters": [
              {
                "name": "p",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:theme",
            "script": "playwright test tests/e2e/theme-testing",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "t",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test:responsive",
            "script": "playwright test tests/e2e/responsive",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\frontend\\package.json"
          },
          {
            "name": "test",
            "script": "node --experimental-vm-modules node_modules/jest/bin/jest.js",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "experimental",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\backend\\package.json"
          },
          {
            "name": "test:watch",
            "script": "node --experimental-vm-modules node_modules/jest/bin/jest.js --watch",
            "description": "Runs tests",
            "category": "development",
            "parameters": [
              {
                "name": "experimental",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "watch",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "w",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\backend\\package.json"
          },
          {
            "name": "test:coverage",
            "script": "node --experimental-vm-modules node_modules/jest/bin/jest.js --coverage",
            "description": "Runs tests",
            "category": "testing",
            "parameters": [
              {
                "name": "experimental",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "coverage",
                "type": "flag",
                "required": false,
                "description": "flag parameter"
              },
              {
                "name": "e",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "v",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "m",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              },
              {
                "name": "c",
                "type": "short-flag",
                "required": false,
                "description": "short-flag parameter"
              }
            ],
            "examples": [],
            "relatedCommands": [],
            "packagePath": "C:\\dev\\Tattoo_MVP\\backend\\package.json"
          }
        ],
        "updates": {
          "updated": true,
          "path": "C:\\dev\\Tattoo_MVP\\docs\\reference\\command-reference.md",
          "commands": 303
        }
      },
      "errors": []
    }
  }
}